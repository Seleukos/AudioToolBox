import sounddevice as sd


class AudioMeasurement:

    def __init__(self, realpart, imagpart):
        self.name_measurement = ''
        self.id_measurement = ''
        self.autogenerated_name_measurement = ''
        self.time_of_measurement = ''
        self.infos = ''
        self.list_audiodevices = []
        self.i = imagpart


    class AudioDevice:
        def __init__(self):
            self.x_position = 0
            self.y_position = 0
            self.settings = 0
            self.infos = ''





def start_audio_measurement():

    # Öffnen der Messungsinstanz der betreffenden Messung

    realpart = 2
    imagpart = 1
    instance_measurement = AudioMeasurement(realpart, imagpart)

    # Abfrage aller Testparameter

    # open_newemeasurenment


    # Abfrage aller angeschlossenen Geräte

    print(sd.query_devices())

    usb_sound_card_indices = list(filter(lambda x: x is not False,
                                         map(get_device_number_if_usb_soundcard,
                                             [index_info for index_info in enumerate(sd.query_devices())])))

    # Abgleich aller angeschlossenen Audiogeräte mit der in der Messungsinstanz definierten Audiogeräte

    # Überprüfen ob in Messungsinstanz definiertes Mischprogramm intalliert ist

    # Starten des definierten Mischprogramms

    # Überprüfen, ob Einstellungen für das Mischprogramm gefunden und geöffnet werden können.

    # Abspielen der Audiodateien und Aufnahme (zeitgleich ud synchronisiert)

    # Abgleich der Messergebnisse mit Erwartungen

    # Speichern der Aufnahmen in Messungsinstanz oder in definierten Ordner

